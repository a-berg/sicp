* Statement

#+begin_src racket
  #lang sicp
  (#%require rackunit)

  (define (square x) (* x x))
  (define (smallest-divisor n)
    (find-divisor n 2))
  (define (find-divisor n test-divisor)
    (cond ((> (square test-divisor) n) n)
          ((divides? test-divisor n) test-divisor)
          (else (find-divisor n (+ test-divisor 1)))))
  (define (divides? a b)
    (= (remainder b a) 0))
#+end_src

Use the smallest-divisor procedure to find the smallest divisor of each of the following numbers: 199, 1999, 19999.

* Solution

This is a non-exercise, but anyway, for the sake of completion:

#+begin_src racket
  (check-equal? (smallest-divisor 199) 199)
  (check-equal? (smallest-divisor 1999) 1999)
  (check-equal? (smallest-divisor 19999) 7)
#+end_src
